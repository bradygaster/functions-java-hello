# This is the configuration for Porter
# You must define steps for each action, but the rest is optional
# See https://porter.sh/author-bundles for documentation on how to configure your bundle
# Uncomment out the sections below to take full advantage of what Porter can do!

name: AzFunctionEnvironment
version: 0.1.0
description: "An example Porter configuration"
invocationImage: porter-az-functions:v0.1.0
tag: jeffhollan/porter-az-functions-bundle:v0.1.0

# Uncomment out the line below to use a template Dockerfile for your invocation image
#dockerfile: Dockerfile.tmpl

mixins:
  - exec
  - kubernetes
  - helm
  - az

parameters:
  - name: dns_name
    type: string
    default: functions
    description: The DNS name to to associate with public IP address for the FQDN
  - name: letsencrypt_email
    type: string
    description: Valid email address to use for Let's Encrypt certificate
    destination:
      env: LETSENCRYPT_EMAIL

install:
  - helm:
      description: "Install nginx"
      name: nginx
      chart: stable/nginx-ingress
      version: "1.26.2"
      namespace: ingress-nginx
      replace: true
      values:
        - nginx-ingress-values.yaml
  - az: 
      description: "Azure CLI login"
      arguments: 
        - "login" 
      flags:
        service-principal: 
        username: "{{ bundle.credentials.azure_client_id}}"
        password: "{{ bundle.credentials.azure_client_secret}}"
        tenant: "{{ bundle.credentials.azure_tenant_id}}"
  - az: 
      description: "Azure CLI set subscription"
      arguments: 
        - "account" 
        - "set" 
      flags:
        subscription: "{{ bundle.credentials.azure_subscription_id}}"
  - exec:
      description: "Configure DNS name"
      command: "bash"
      arguments:
        - "configure-dns-name.sh"
        - ingress-nginx
        - nginx
        - "{{ bundle.parameters.dns_name }}"
      outputs:
        - name: fqdn
          path: FQDN
  - exec:
      description: "Install cert-manager"
      command: "bash"
      arguments:
        - "-c"
        - |
          kubectl create namespace cert-manager
          kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.12.0/cert-manager.yaml
          echo "Waiting for cert-manager to start running....."
          kubectl wait pod --for=condition=Ready -l app=webhook -n cert-manager --timeout 300s
  - kubernetes:
      description: "Create a CA cluster issuer"
      manifests:
        - cluster-issuer.yaml
      wait: true
  
  - exec:
      description: "Deploy Prometheus"
      command: "bash"
      arguments:
        - "-c"
        - |
          kubectl apply --kustomize ./prometheus/
  
  - exec:
      description: "Add KEDA repo"
      command: "bash"
      arguments:
        - "-c"
        - "helm repo add kedacore https://kedacore.github.io/charts"
  - helm:
      description: "Deploy KEDA"
      name: keda
      chart: kedacore/keda
      version: "1.0.0"
      namespace: keda
      replace: true

  - kubernetes:
      description: "Create cert-manager config"
      manifests:
        - prod-cert-manager.yaml
      wait: true

        

outputs:
  - name: fqdn
    type: string
    applyTo:
      - install
    description: "Fully qualified domain name for the ingress controller" 

uninstall:
  - exec:
      description: "Uninstall Azure Functions Environment"
      command: bash
      flags:
        c: echo I haven't implemented this yet.

# See https://porter.sh/wiring/#credentials
credentials:
  - name: kubeconfig
    path: /root/.kube/config
    default: ~/.kube/config
  - name: azure_client_id
    env: AZURE_CLIENT_ID
    description: AAD Client ID for Azure account authentication - used for Az CLI
  - name: azure_tenant_id
    env: AZURE_TENANT_ID
    description: Azure AAD Tenant Id for Azure account authentication  - used for Az CLI
  - name: azure_client_secret
    env: AZURE_CLIENT_SECRET
    description: AAD Client Secret for Azure account authentication - used for Az CLI
  - name: azure_subscription_id
    env: AZURE_SUBSCRIPTION_ID
    description: Azure Subscription Id used to set the subscription where the account has access to multiple subscriptions
